	.text

	/*
         * save the old thread's registers,
         * restore the new thread's registers.
         */

	.globl thread_switch
thread_switch:
	/* YOUR CODE HERE */
	/* 保存当前线程的寄存器状态 */
    sd ra, 0(a0)       /* 保存返回地址寄存器 ra 到 a0 指向的内存位置 */
    sd sp, 8(a0)       /* 保存栈指针寄存器 sp 到 a0 + 8 的位置 */
    sd s0, 16(a0)      /* 保存寄存器 s0 到 a0 + 16 的位置 */
    sd s1, 24(a0)      /* 保存寄存器 s1 到 a0 + 24 的位置 */
    sd s2, 32(a0)      /* 保存寄存器 s2 到 a0 + 32 的位置 */
    sd s3, 40(a0)      /* 保存寄存器 s3 到 a0 + 40 的位置 */
    sd s4, 48(a0)      /* 保存寄存器 s4 到 a0 + 48 的位置 */
    sd s5, 56(a0)      /* 保存寄存器 s5 到 a0 + 56 的位置 */
    sd s6, 64(a0)      /* 保存寄存器 s6 到 a0 + 64 的位置 */
    sd s7, 72(a0)      /* 保存寄存器 s7 到 a0 + 72 的位置 */
    sd s8, 80(a0)      /* 保存寄存器 s8 到 a0 + 80 的位置 */
    sd s9, 88(a0)      /* 保存寄存器 s9 到 a0 + 88 的位置 */
    sd s10, 96(a0)     /* 保存寄存器 s10 到 a0 + 96 的位置 */
    sd s11, 104(a0)    /* 保存寄存器 s11 到 a0 + 104 的位置 */

    /* 加载新线程的寄存器状态 */
    ld ra, 0(a1)       /* 加载 a1 指向的内存位置的值到返回地址寄存器 ra */
    ld sp, 8(a1)       /* 加载 a1 + 8 的值到栈指针寄存器 sp */
    ld s0, 16(a1)      /* 加载 a1 + 16 的值到寄存器 s0 */
    ld s1, 24(a1)      /* 加载 a1 + 24 的值到寄存器 s1 */
    ld s2, 32(a1)      /* 加载 a1 + 32 的值到寄存器 s2 */
    ld s3, 40(a1)      /* 加载 a1 + 40 的值到寄存器 s3 */
    ld s4, 48(a1)      /* 加载 a1 + 48 的值到寄存器 s4 */
    ld s5, 56(a1)      /* 加载 a1 + 56 的值到寄存器 s5 */
    ld s6, 64(a1)      /* 加载 a1 + 64 的值到寄存器 s6 */
    ld s7, 72(a1)      /* 加载 a1 + 72 的值到寄存器 s7 */
    ld s8, 80(a1)      /* 加载 a1 + 80 的值到寄存器 s8 */
    ld s9, 88(a1)      /* 加载 a1 + 88 的值到寄存器 s9 */
    ld s10, 96(a1)     /* 加载 a1 + 96 的值到寄存器 s10 */
    ld s11, 104(a1)    /* 加载 a1 + 104 的值到寄存器 s11 */
	ret    /* return to ra */
